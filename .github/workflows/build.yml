name: build

on:
  workflow_dispatch:
  push:
    branches: [main]
  repository_dispatch:
    branches: [main]


jobs:
  build:
    strategy:
      matrix:
        java: [ '17' ]
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
 
    steps:
    - name: Check out
      uses: actions/checkout@v3
      with:
        lfs: true
        fetch-depth: 0
        
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: ${{ matrix.java }}
        cache: 'maven'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Configure servers
      uses: s4u/maven-settings-action@v2.7.0
      with:
        githubServer: false
        servers: |
          [{
              "id": "ossrh",
              "username": "${{ secrets.OSSRH_USERNAME }}",
              "password": "${{ secrets.OSSRH_PASSWORD }}"
           },{
              "id": "ghcr.io",
              "username": "${{ secrets.GHUB_USERNAME }}",
              "password": "${{ secrets.GHUB_ACCESS_TOKEN }}"
           },{
              "id": "github",
              "username": "${{ secrets.GHUB_USERNAME }}",
              "password": "${{ secrets.GHUB_ACCESS_TOKEN }}"
           }]
    
    - name: Set up Web3j in case Servers for releases should be unreachable
      run: |
        mkdir ~/.web3j
        mkdir ~/.web3j/solc
        cp sapl-ethereum/src/main/solc/releases.json ~/.web3j/solc

    - name: Build with Maven (JUnit, JaCoCo, Sonar) 
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B org.jacoco:jacoco-maven-plugin:0.8.7:prepare-agent install org.jacoco:jacoco-maven-plugin:0.8.7:report org.sonarsource.scanner.maven:sonar-maven-plugin:3.9.1.2184:sonar -Dsonar.host.url=https://sonar.ftk.de -Dsonar.login=${SONAR_TOKEN}        

    - name: Install GPG Code Signing Key
      run: |
        cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
        gpg --list-secret-keys --keyid-format LONG

    - name: Deploy Maven artefacts
      run: mvn -B --no-transfer-progress -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} -DskipTests -Ppublish clean deploy      
      
    - name: Clean up local repository before caching
      run: rm -rf /.m2/repository/io/sapl
