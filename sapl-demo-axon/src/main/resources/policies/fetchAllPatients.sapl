/*
 * Import the filter library, so that 'blacken' can be used directly instead of using the absolute name 'filter.blacken'.
 */
import filter.*

/*
 * In each SAPL document, the top level policy or policy set MUST have a unique name.
 */
set "fetch patient list policy set"

/*
 * The 'first-applicable' combination algorithm is used here in oder to avoid 'transformation uncertainty',
 * i.e., multiple policies which return PERMIT but do not agree about transformation of the resource.
 * This algorithm evaluates policies from top to bottom in the document and stops as soon as one policy 
 * yields an applicable result or errors.
 */
first-applicable

/*
 * scope the policy set to be applicable to all authorization subscriptions "Fetch" and "Monitor" actions on "patient".
 */
for resource.type == "patient" & (action == "FetchAll" | action == "Monitor")


/*
 * All doctors have full access to medical data of the patients.
 * All nurses working in the same ward where the patient is hospitalized have full access. 
 */
policy "permit doctors full patient access" 
permit subject.position == "DOCTOR"

/*
 * All other authenticated staff members have limited access.
 */
policy "authenticated users may see filtered" 
permit subject != "anonymous"
obligation
	{
		"type" 		 : "filterMessagePayloadContent",
		"conditions" : [
		                 {
		                   "type"  : "!=",
		                   "path"  : "$.ward",
		                   "value" : subject.assignedWard
		                 }
		               ],
		"actions"    : [
						{ 
						  "type" : "blacken", 
						  "path" : "$.latestIcd11Code", 
						  "discloseLeft": 2
						},
						{ 
						  "type" : "blacken", 
						  "path" : "$.latestDiagnosisText",
						  "discloseLeft": 2						  
						}
                       ]
	}
	