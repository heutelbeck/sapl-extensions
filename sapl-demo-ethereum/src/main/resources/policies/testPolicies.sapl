import org.demo.pip.EthereumPrinterPip as printer

set "printerPolicies"
deny-unless-permit

policy "printWithUltimaker"
permit
  action=="start" & resource=="Ultimaker 2 Extended+"
where
  var request = {"address":subject.ethereumAddress, "printer":resource};
  request.<printer.certified>;
  
policy "printWithGraftenOne"
permit
  action=="start" & resource=="Graften One"
where
  var request = {"address":subject.ethereumAddress, "printer":resource};
  request.<printer.certified>;
  
policy "printWithZmorphVX"
permit
  action=="start" & resource=="Zmorph VX"
where
  var request = {"address":subject.ethereumAddress, "printer":resource};
  request.<printer.certified>;
  
policy "crowdTemplate"
permit
  action=="access" & resource=="crowdTemplate"
where
  var request = {"address":subject.<ethereum.coinbase>};
  request.<ethereum.balance> >= 108000000000000000000;
  
policy "paidTemplate"
permit
  action=="access" & resource=="paidTemplate"
where
  var request = {
                 "transactionHash":subject.transactionHash,
                 "fromAccount":subject.ethereumAddress,
                 "toAccount":subject.<ethereum.coinbase>,
                 "transactionValue":1000000000000000000
                 };
  request.<ethereum.transaction>;
